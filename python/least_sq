#!/usr/bin/env python3

# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import argparse
import math
import pathlib

import numpy as np

import lstsq
import pclasses
import plot_anim
import read_results

topdir = pathlib.Path(__file__).resolve().parent.parent

def parse_args():
    p = argparse.ArgumentParser(allow_abbrev=False,
        description="Model performance using least squares")
    p.add_argument('csv', type=pathlib.Path)
    p.add_argument('algorithm')
    p.add_argument('--model', action='append')
    p.add_argument('--output')
    return p.parse_args()

def read_data(csv, algorithm):
    items = []
    for item in read_results.read(csv):
        if item.alg == algorithm:
            items.append(item)
    return items

def main():
    args = parse_args()
    models = list(pclasses.lookup_models(args.model))
    items = read_data(args.csv, args.algorithm)
    fit = lstsq.gen_fit(items, models)
    z = " + ".join(m.tex(c) for m, c in zip(models, fit))
    z = z.replace("+ -", "- ")
    print(z)
    plotdata = lstsq.gen_plotdata(items, models, fit)
    plot_anim.plot(["predicted", "actual"], plotdata, args.algorithm, args.output)

if __name__ == '__main__':
    main()
