#!/usr/bin/env python3

# Copyright 2018 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import argparse
import pathlib
import random

topdir = pathlib.Path(__file__).resolve().parent.parent

exec((topdir / "latex/choose_multiset.py").read_text())
exec((topdir / "latex/choose_binom.py").read_text())

def binomial(n, k):
    r = 1
    for i in range(min(k, n - k)):
        r *= n - i
        r //= i + 1
    return r

def test_choose(args, choose):
    counts = {}
    for _ in range(args.num_tests):
        r = tuple(choose(args.n, args.k))
        counts[r] = 1 + counts.get(r, 0)
    if len(counts) <= args.show_max:
        for k, v in sorted(counts.items()):
            print(f"{k}: {v}")
    print(len(counts), binomial(args.n, args.k))
    print(min(counts.values()), max(counts.values()))

def parse_args():
    p = argparse.ArgumentParser(allow_abbrev=False,
        description="Test one algorithm implementation for fairness")
    p.add_argument('n', type=int)
    p.add_argument('k', type=int)
    p.add_argument('--num-tests', type=int, default=100000,
        help="Number of tests to run")
    p.add_argument('--show-max', type=int, default=21,
        help="Maximum number of result rows to show")
    return p.parse_args()

def main():
    args = parse_args()
    test_choose(args, choose_binom)

if __name__ == '__main__':
    main()
